- name: "Install Docker"
  become: true
  vars:
    docker_apt_key_location: "/usr/share/keyrings/docker-archive-keyring.gpg"
  block:
    - name: "Install Docker dependencies"
      ansible.builtin.apt:
        pkg:
          - "apt-transport-https"
          - "ca-certificates"
          - "curl"
          - "gnupg-agent"
          - "software-properties-common"

    - name: "Add Docker signing key"
      ansible.builtin.apt_key:
        url: "https://download.docker.com/linux/ubuntu/gpg"
        state: "present"
        keyring: "{{ docker_apt_key_location }}"

    - name: "Add Docker repository"
      ansible.builtin.apt_repository:
        repo: >-
          deb [arch={{ arch }} signed-by={{ docker_apt_key_location }}]
          https://download.docker.com/linux/ubuntu
          {{ ansible_distribution_release }} stable
        state: "present"
        mode: "0666"

    - name: "Install Docker"
      ansible.builtin.apt:
        pkg:
          - "docker-ce"
          - "docker-ce-cli"
          - "containerd.io"

- name: "Create Docker group"
  become: true
  ansible.builtin.group:
    name: "docker"
    state: "present"

- name: "Add user to Docker group"
  become: true
  ansible.builtin.user:
    name: "{{ username }}"
    groups: "docker"
    append: true

- name: "Reset ssh connection"
  ansible.builtin.meta: "reset_connection"

- name: "Create cli-plugins directory"
  ansible.builtin.file:
    name: "{{ home }}/.docker/cli-plugins"
    state: "directory"
    mode: 0775

- name: "Install docker compose"
  ansible.builtin.get_url:
    url: "https://github.com/docker/compose/releases/download/v2.1.0/\
      docker-compose-{{ ansible_system }}-{{ ansible_architecture }}"
    dest: "{{ home }}/.docker/cli-plugins/docker-compose"
    mode: "a+x"

- name: "Add /etc/docker/daemon.json"
  become: true
  ansible.builtin.copy:
    src: "files/daemon.json"
    dest: "/etc/docker/daemon.json"
    mode: 0644
  notify:
    - "Restart docker service"
