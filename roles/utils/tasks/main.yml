- name: "Install command line utils"
  become: true
  ansible.builtin.apt:
    name: "{{ item }}"
  with_items:
    - "bat"
    - "brotli"
    - "htop"
    - "jq"
    - "lm-sensors"
    - "rlwrap"
    - "socat"
    - "traceroute"
    - "unrar"
    - "xclip"

- name: "Install hyperfine"
  become: true
  ansible.builtin.apt:
    deb: "https://github.com/sharkdp/hyperfine/releases/download/\
      v1.13.0/hyperfine_1.13.0_{{ arch }}.deb"
  tags: "hyperfine"

- name: "Make sure ~/.local exists"
  ansible.builtin.file:
    path: "/home/{{ username }}/.local"
    state: "directory"
    mode: "0755"

- name: "Symlink batcat to bat if it's installed that way"
  vars:
    batcat_path: "/usr/bin/batcat"
  block:
    - name: "Check if batcat exists"
      ansible.builtin.stat:
        path: "{{ batcat_path }}"
      register: "batcat"

    - name: "Symlink batcat"
      when: "batcat.stat.exists"
      ansible.builtin.file:
        src: "{{ batcat_path }}"
        dest: "/home/{{ username }}/.local/bin/bat"
        state: "link"

- name: "Install fzf"
  block:
    - name: "Clone fzf repo"
      ansible.builtin.git:
        repo: https://github.com/junegunn/fzf
        dest: /home/{{ username }}/.fzf

    - name: "Install fzf"
      ansible.builtin.command: "/home/{{ username }}/.fzf/install"
  tags: "fzf"

- name: "Install exa"
  ansible.builtin.shell: |
    PATH="$HOME/.cargo/bin:$PATH" cargo install exa
  tags: "exa"

- name: "Install wrk"
  block:
    - name: "Install wrk build dependencies"
      become: true
      ansible.builtin.apt:
        pkg:
          - "build-essential"
          - "libssl-dev"
          - "git"

    - name: "Pull wrk repo"
      ansible.builtin.git:
        repo: "https://github.com/wg/wrk.git"
        dest: "/tmp/wrk"
        version: "refs/tags/4.2.0"

    - name: "Make wrk binary"
      community.general.make:
        chdir: "/tmp/wrk"

    - name: "Move wrk binary to /usr/local/bin"
      become: true
      ansible.builtin.copy:
        src: "/tmp/wrk/wrk"
        dest: "/usr/local/bin/wrk"
        mode: "a+x"
  tags: "wrk"

- name: "Install hey"
  become: true
  ansible.builtin.get_url:
    url: "https://hey-release.s3.us-east-2.amazonaws.com/hey_linux_amd64"
    dest: "/usr/local/bin/hey"
    mode: "a+x"
  tags: "hey"

- name: "Install packer"
  become: true
  block:
    - name: "Add the HashiCorp GPG key"
      ansible.builtin.apt_key:
        url: "https://apt.releases.hashicorp.com/gpg"
        state: "present"

    - name: "Add the official HashiCorp Linux repository"
      ansible.builtin.apt_repository:
        repo: >-
          deb [arch={{ arch }}] https://apt.releases.hashicorp.com
          {{ ansible_distribution_release }} main
        state: "present"
        mode: "0666"

    - name: "Install packer"
      ansible.builtin.apt:
        name: "packer"
  tags: "packer"

- name: "Install vagrant"
  become: true
  block:
    - name: "Add the HashiCorp GPG key"
      ansible.builtin.apt_key:
        url: "https://apt.releases.hashicorp.com/gpg"
        state: "present"

    - name: "Add the official HashiCorp Linux repository"
      ansible.builtin.apt_repository:
        repo: >-
          deb [arch={{ arch }}] https://apt.releases.hashicorp.com
          {{ ansible_distribution_release }} main
        state: "present"
        mode: "0666"

    - name: "Install vagrant"
      ansible.builtin.apt:
        name: "vagrant"
  tags: "vagrant"

- name: "Install protoc"
  become: true
  ansible.builtin.unarchive:
    src: "https://github.com/protocolbuffers/protobuf/releases/download/\
      v3.12.4/protoc-3.12.4-linux-{{ ansible_architecture }}.zip"
    dest: "/usr/local"
    remote_src: true
    include: ["bin/protoc"]
    mode: "a+x"
  tags: "protoc"

- name: "Install Insomnia client"
  become: true
  ansible.builtin.apt:
    deb: https://updates.insomnia.rest/downloads/ubuntu/latest?app=com.insomnia.app
  tags: "insomnia"

- name: "Install CopyQ"
  become: true
  ansible.builtin.apt:
    name: "copyq"
  tags: "copyq"
